version: '3.9'

services:
  # db:
  #   image: postgres
  #   restart: always
  #   container_name: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: test
  #     POSTGRES_PASSWORD: test
  #     POSTGRES_DB: test_db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build: .
    container_name: backend
    command: gunicorn core.wsgi --bind 0.0.0.0:8000
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=False
      # - DB_ENGINE=django.db.backends.postgresql
      # - DB_NAME=test_db
      # - DB_USERNAME=test
      # - DB_PASSWORD=test
      # - DB_HOST=db
      # - DB_PORT=5432
    depends_on:
      - redis
      # - db
    

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - backend
      - redis
  
  celery_beat:
    build: .
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      # - db
    # environment:
    #   - DB_NAME=test_db
    #   - DB_USERNAME=test
    #   - DB_PASSWORD=test

  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      - celery_beat
  

volumes:
  static_volume:
  media_volume:
  # postgres_data: